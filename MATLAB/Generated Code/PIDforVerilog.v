// -------------------------------------------------------------
// 
// File Name: hdlsrc/PIDforVerilog/PIDforVerilog.v
// Created: 2025-06-05 14:36:24
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 0.0078125
// Target subsystem base rate: 0.0078125
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        0.0078125
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// out                           ce_out        0.0078125
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: PIDforVerilog
// Source Path: PIDforVerilog
// Hierarchy Level: 0
// Model version: 1.1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module PIDforVerilog
          (clk,
           reset,
           clk_enable,
           Sensor,
           SetPoint,
           ce_out,
           out);


  input   clk;
  input   reset;
  input   clk_enable;
  input   signed [11:0] Sensor;  // sfix12
  input   signed [31:0] SetPoint;  // sfix32_En16
  output  ce_out;
  output  signed [31:0] out;  // sfix32_En16


  wire signed [11:0] ADC;  // sfix12
  wire signed [31:0] input_to32_out1;  // sfix32_En16
  wire signed [31:0] error_signal;  // sfix32_En16
  wire signed [31:0] output_rsvd;  // sfix32_En16


  assign ADC = Sensor;

  assign input_to32_out1 = {{4{ADC[11]}}, {ADC, 16'b0000000000000000}};

  assign error_signal = SetPoint - input_to32_out1;

  Discrete_PID_Controller u_Discrete_PID_Controller (.clk(clk),
                                                     .reset(reset),
                                                     .enb(clk_enable),
                                                     .u(error_signal),  // sfix32_En16
                                                     .y(output_rsvd)  // sfix32_En16
                                                     );

  assign out = output_rsvd;

  assign ce_out = clk_enable;

endmodule  // PIDforVerilog

