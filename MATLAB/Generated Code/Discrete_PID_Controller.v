// -------------------------------------------------------------
// 
// File Name: hdlsrc/PIDforVerilog/Discrete_PID_Controller.v
// Created: 2025-06-05 14:36:24
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Discrete_PID_Controller
// Source Path: PIDforVerilog/Discrete PID Controller
// Hierarchy Level: 1
// Model version: 1.1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Discrete_PID_Controller
          (clk,
           reset,
           enb,
           u,
           y);


  input   clk;
  input   reset;
  input   enb;
  input   signed [31:0] u;  // sfix32_En16
  output  signed [31:0] y;  // sfix32_En16


  wire signed [31:0] Parallel_P_Gain_out1;  // sfix32_En16
  wire signed [31:0] ADC;  // sfix32_En16
  wire signed [31:0] I_Gain_out1;  // sfix32_En16
  wire signed [31:0] Tracking_Mode_Sum_out1;  // sfix32_En16
  wire signed [31:0] preInt_Signal_out1;  // sfix32_En16
  wire signed [31:0] error_signal;  // sfix32_En16
  wire signed [31:0] D_Gain_out1;  // sfix32_En16
  wire signed [31:0] N_Gain_out1;  // sfix32_En16
  wire signed [31:0] Tsamp_Ngain_out1;  // sfix32_En16
  wire signed [31:0] Filter_out1;  // sfix32_En16
  wire signed [31:0] Ideal_P_Gain_out1;  // sfix32_En16
  wire signed [31:0] preSat_Signal_out1;  // sfix32_En16
  wire signed [31:0] Anti_windup_out1;  // sfix32_En16
  wire signed [31:0] Tsamp_Integral_out1;  // sfix32_En16
  wire signed [31:0] Integrator_out2;  // sfix32_En16
  wire signed [31:0] Sum_out1;  // sfix32_En16
  wire signed [31:0] Saturation_out1;  // sfix32_En16

  // Feedback Features
  // Derivative
  // Integrator


  Parallel_P_Gain u_Parallel_P_Gain (.err(u),  // sfix32_En16
                                     .Out1(Parallel_P_Gain_out1)  // sfix32_En16
                                     );

  assign ADC = u;

  I_Gain u_I_Gain (.err(ADC),  // sfix32_En16
                   .Out1(I_Gain_out1)  // sfix32_En16
                   );

  Tracking_Mode_Sum u_Tracking_Mode_Sum (.fromIgain(I_Gain_out1),  // sfix32_En16
                                         .preInt(Tracking_Mode_Sum_out1)  // sfix32_En16
                                         );

  preInt_Signal u_preInt_Signal (.preInt(Tracking_Mode_Sum_out1),  // sfix32_En16
                                 .Out1(preInt_Signal_out1)  // sfix32_En16
                                 );

  External_Derivative u_External_Derivative (.err(u),  // sfix32_En16
                                             .Out1(error_signal)  // sfix32_En16
                                             );

  D_Gain u_D_Gain (.err(error_signal),  // sfix32_En16
                   .Out1(D_Gain_out1)  // sfix32_En16
                   );

  Tsamp_Ngain u_Tsamp_Ngain (.U(N_Gain_out1),  // sfix32_En16
                             .Out1(Tsamp_Ngain_out1)  // sfix32_En16
                             );

  Filter u_Filter (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .U(D_Gain_out1),  // sfix32_En16
                   .Nout(Tsamp_Ngain_out1),  // sfix32_En16
                   .Y(Filter_out1)  // sfix32_En16
                   );

  N_Gain u_N_Gain (.U(Filter_out1),  // sfix32_En16
                   .Out1(N_Gain_out1)  // sfix32_En16
                   );

  preSat_Signal u_preSat_Signal (.forward(Ideal_P_Gain_out1),  // sfix32_En16
                                 .Out1(preSat_Signal_out1)  // sfix32_En16
                                 );

  Anti_windup u_Anti_windup (.preSat(preSat_Signal_out1),  // sfix32_En16
                             .preInt(preInt_Signal_out1),  // sfix32_En16
                             .Out1(Anti_windup_out1)  // sfix32_En16
                             );

  Tsamp_Integral u_Tsamp_Integral (.U(Anti_windup_out1),  // sfix32_En16
                                   .Out1(Tsamp_Integral_out1)  // sfix32_En16
                                   );

  Integrator u_Integrator (.clk(clk),
                           .reset(reset),
                           .enb(enb),
                           .U(Tsamp_Integral_out1),  // sfix32_En16
                           .out(Integrator_out2)  // sfix32_En16
                           );

  Sum u_Sum (.P(Parallel_P_Gain_out1),  // sfix32_En16
             .I(Integrator_out2),  // sfix32_En16
             .D(N_Gain_out1),  // sfix32_En16
             .Out1(Sum_out1)  // sfix32_En16
             );

  Ideal_P_Gain u_Ideal_P_Gain (.In1(Sum_out1),  // sfix32_En16
                               .Out1(Ideal_P_Gain_out1)  // sfix32_En16
                               );

  Saturation u_Saturation (.In1(Ideal_P_Gain_out1),  // sfix32_En16
                           .Out1(Saturation_out1)  // sfix32_En16
                           );

  assign y = Saturation_out1;

endmodule  // Discrete_PID_Controller

